G <- ggplot(data,aes(x=variable,y=variable2)) + geom_bar(stat = "Identity") + labs(x = 'variable', y = 'variable2', title = 'Bar Plot' )
}
G <- MyPlotFunction(N,N$Volume,N$Price)
G
MyPlotFunction <- function(data,variable,variable2)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x=variable) ) + geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) + geom_bar(stat = "Identity") + labs(x = variable, y = variable2, title = 'Bar Plot' )
}
G <- MyPlotFunction(N,N$Volume,N$Price)
G
MyPlotFunction <- function(data,variable,variable2)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x=variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable, y = names(data[variable2]), title = 'Bar Plot' )
}
G <- MyPlotFunction(N,N$Volume,N$Price)
View(N)
summary(N)
MyPlotFunction <- function(data,variable,variable2)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x=variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = as.character(variable),  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,N$Volume,N$Price)
G <- MyPlotFunction(N,Volume,Price)
MyPlotFunction <- function(data,variable,variable2)
{
if (data$variable2 == 0)
{
G <- ggplot(data,aes(x=data$variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=data$variable,y=data$variable2)) +
geom_bar(stat = "Identity") + labs(x = as.character(variable),  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,Volume,Price)
G <- MyPlotFunction(N,Volume)
MyPlotFunction <- function(data,variable,variable2)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x=data$variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=data$variable,y=data$variable2)) +
geom_bar(stat = "Identity") + labs(x = as.character(variable),  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,Volume)
G <- MyPlotFunction(N,N$Volume)
MyPlotFunction <- function(data,variable,variable2)
{
if (data[variable] == 0)
{
G <- ggplot(data,aes(x=data[variable]) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=data[variable],y=data[variable2])) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,Volume,Price)
G <- MyPlotFunction(N,N$Volume,N$Price)
list <-TrainAndTestSets(Volume,0.75,N,123)
G <- MyPlotFunction(N,"Volume","Price")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable == 0)
{
G <- ggplot(data,aes(x=datavariable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,"Volume","Price")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable == 0)
{
G <- ggplot(data,aes(x=variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,"Volume","Price")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable == 0)
{
G <- ggplot(data,aes(x=variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,"Volume","Price")
G
G <- MyPlotFunction(N,"Volume")
G
G <- MyPlotFunction(N,$Volume)
G <- MyPlotFunction(N,N$Volume)
G
G <- ggplot(N,aes(x=Volume) ) +
geom_bar()
G
G <- MyPlotFunction(N,"Volume")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x=variable) ) +
geom_bar() + labs(title = 'Bar Plot' ) + labs(title = 'Bar Plot' )
}
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,"Volume")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()
else
G <- ggplot(data,aes(x=variable,y=variable2)) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()
# else
#   G <- ggplot(data,aes(x=data[[variable,y=variable2)) +
#                 geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
#
}
}
G <- MyPlotFunction(N,"Volume")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
# else
#   G <- ggplot(data,aes(x=data[[variable,y=variable2)) +
#                 geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
#
}
}
G <- MyPlotFunction(N,"Volume")
G
SubSetDataProductTypes <- function(data,p,p1 = 0,p2 = 0 , p3 = 0 , p4 = 0)
{
if ( p1 == 0 && p2 == 0 && p3 == 0 && p4 == 0)
{
Nsub <- subset(data, data$ProductType == p)
return(Nsub)
}
}
O<-  SubSetDataProductTypes(N,"Laptop")
O
O
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
else
G <- ggplot(data,aes(x=data[[variable]],y=data[[variable2]])) +
geom_bar(stat = "Identity") + labs(x = variable, y = variable2 , title = 'Bar Plot' )
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
else
#   G <- ggplot(data,aes(x=data[[variable,y=variable2)) +
#                 geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
#
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
#else
#   G <- ggplot(data,aes(x=data[[variable,y=variable2)) +
#                 geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
#
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
else
G <- ggplot(data,aes(x= data[[variable]],y= data[[variable2]])) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
else
G <- ggplot(data,aes(data,x= data[[variable]],y= data[[variable2]])) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
}
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
}
else
G <- ggplot(data,aes(data,x= data[[variable]],y= data[[variable2]])) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
}
###
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
}
else
G <- ggplot(data,aes(data,x= data[[variable]],y= data[[variable2]])) +
geom_bar(stat = "Identity") + labs(x = variable,  title = 'Bar Plot' )
}
G <- MyPlotFunction(N,"Volume")
G <- MyPlotFunction(N,"Volume","Price")
G
G <- MyPlotFunction(N,"Volume")
G
G <- MyPlotFunction(N,"Volume","Price")
G
MyPlotFunction <- function(data,variable=0,variable2=0)
{
if (variable2 == 0)
{
G <- ggplot(data,aes(x= data[[variable]]) ) +
geom_bar()+ labs( x = variable)
}
else
G <- ggplot(data,aes(data,x= data[[variable]],y= data[[variable2]])) +
geom_bar(stat = "Identity") +
labs(x = variable,y=variable2 , title = 'Bar Plot' )
}
G <- MyPlotFunction(N,"Volume","Price")
G
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var)$out
O <- data[-which(data$var %in% O),]
O
}
O <- RemoveOutliersF(EP,"Volume")
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var,plot=FALSE)$out
O <- data[-which(data$var %in% O),]
O
}
O <- RemoveOutliersF(EP,"Volume")
O
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var,plot=FALSE)$out
O <- data[which(data$var %in% O),]
O
}
O <- RemoveOutliersF(EP,"Volume")
O
O <- boxplot(EP$Volume,plot=FALSE)$out
O <- EP[which(EP$Volumer %in% O),]
O
O <- boxplot(EP$Volume,plot=FALSE)$out
O
rm(list=ls(all=TRUE))
O <- boxplot(EP$Volume,plot=FALSE)$out
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
EP <- read.csv( file ="./data/Epa.csv" , header = TRUE , sep = ',')
NP <- read.csv(file = "./data/Npa.csv", header = TRUE , sep =',')
O <- boxplot(EP$Volume,plot=FALSE)$out
O
O <- EP[which(EP$Volumer %in% O),]
O
O <- EP[which(EP$Volume %in% O),]
O <- RemoveOutliersF(EP,"Volume")
O
O <- EP[-which(EP$Volume %in% outliers),]
O <- EP[-which(EP$Volume %in% O),]
O
O <- boxplot(EP$Volume,plot=FALSE)$out
O <- EP[-which(EP$Volume %in% O),]
rm(list=ls(all=TRUE))
library(caret)
library(readr)
library(rstudioapi)
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
EP <- read.csv( file ="./data/Epa.csv" , header = TRUE , sep = ',')
NP <- read.csv(file = "./data/Npa.csv", header = TRUE , sep =',')
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var,plot=FALSE)$out
O <- data[-which(data$var %in% O),]
O
}
O <- RemoveOutliersF(EP,"Volume")
O
O <- boxplot(EP$Volume,plot=FALSE)$out
O <- EP[-which(EP$Volume %in% O),]
O <- boxplot(EP$Volume,plot=FALSE)$out
O <- EP[-which(EP$Volume %in% O),]
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var,plot=FALSE)$out
O <- data[-which(data$var %in% O),]
O
}
O
O <- RemoveOutliersF(EP,"Volume")
O <- RemoveOutliersF(EP,Volume)
rm(list=ls(all=TRUE))
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
EP <- read.csv( file ="./data/Epa.csv" , header = TRUE , sep = ',')
NP <- read.csv(file = "./data/Npa.csv", header = TRUE , sep =',')
O <- RemoveOutliersF(EP,Volume)
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var,plot=FALSE)$out
O <- data[-which(data$var %in% O),]
O
}
O <- RemoveOutliersF(EP,Volume)
K <- RemoveOutliersF(EP,Volume)
K <- RemoveOutliersF(EP,"Volume")
K <- RemoveOutliersF(EP,"Volume")
K <- RemoveOutliersF(EP,Volume)
Out <- boxplot(EP$Volume,plot= FALSE)$out
Out <- boxplot(EP$Volume,plot= FALSE)$out
K <- EP[-which(EP$Volume %in% Out),]
RemoveOutliersF <- function(data,var)
{
O <- boxplot(data$var,plot=FALSE)$out
data <- data[-which(data$var %in% O),]
}
K <- RemoveOutliersF(EP,Volume)
K <- RemoveOutliersF(EP,Volume)
Out <- boxplot(EP$Volume,plot= FALSE)$out
K <- EP[-which(EP$Volume %in% Out),]
RemoveOutliersF <- function(data,var)
{
Out <- boxplot(data$var,plot=FALSE)$out
K <- data[-which(data$var %in% Out),]
}
K <- RemoveOutliersF(EP,Volume)
RmOut <- function(D,V){
Out <- boxplot(D$V ,plot = False)$out
Out
}
L <- RmOut(EP,Volume)
RmOut <- function(D,V){
Out <- boxplot(D$V ,plot = FALSE)$out
Out
}
L <- RmOut(EP,Volume)
RmOut <- function(D,V){
Out <- boxplot(D$V ,plot = FALSE)$out
D <- D[-which(D$V %in% Out),]
D
}
L <- RmOut(EP,Volume)
#  rm(list=ls(all=TRUE))
rm(list = setdiff(ls(), lsf.str()))
library(caret)
library(readr)
library(rstudioapi)
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
EP <- read.csv( file ="./data/Epa.csv" , header = TRUE , sep = ',')
NP <- read.csv(file = "./data/Npa.csv", header = TRUE , sep =',')
K <- RemoveOutliersF(EP,Volume)
RmOut <- function(D,V){
Out <- boxplot(D$V ,plot = FALSE)$out
K <- D[-which(D$V %in% Out),]
K
}
L <- RmOut(EP,Volume)
L <- RmOut(EP,Volume)
RemoveOutliersF <- function(x,var)
{
Out <- boxplot(data$var,plot=FALSE)$out
K <- data[-which(data$var %in% Out),]
}
S <- RemoveOutliersF(EP,Volume)
RemoveOutliersF <- function(x,var)
{
Out <- boxplot(x$var,plot=FALSE)$out
K <- x[-which(x$var %in% Out),]
}
S <- RemoveOutliersF(EP,Volume)
RemoveOutliersF <- function(x,var)
{
Out <- boxplot(x$var, plot = FALSE)$out
K <- x[-which(x$var %in% Out),]
K
}
S <- RemoveOutliersF(EP,Volume)
RmOut <- function(D,V){
Out <- boxplot(D$V ,plot = FALSE)$out
K <- D[-which(D$V %in% Out),]
K
}
L <- RmOut(EP,Volume)
RemoveOutliersF <- function(x,var)
{
Out <- boxplot(x$var, plot = FALSE)$out
K <- x[-which(x$var %in% Out )]
K
}
S <- RemoveOutliersF(EP,Volume)
S <- RemoveOutliersF(EP,Volume)
RemoveOutliersF <- function(x,var)
{
Out <- boxplot(x$var, plot = FALSE)$out
K <- x[-which(x$var %in% Out ),]
K
}
S <- RemoveOutliersF(EP,Volume)
RemoveOutliersF <- function(x,var){
Out <- boxplot(x$var, plot = FALSE)$out
K <- x[-which(x$var %in% Out ),]
K
}
S <- RemoveOutliersF(EP,Volume)
RmOut <- function(D,V){
Out <- boxplot(D$V ,plot = FALSE)$out
K <- D[-which(D$V %in% Out),]
K
}
L <- RmOut(EP,Volume)
