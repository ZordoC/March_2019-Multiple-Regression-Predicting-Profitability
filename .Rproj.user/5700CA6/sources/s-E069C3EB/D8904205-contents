#tutorial at: https://rpubs.com/Mentors_Ubiqum/ggplot_workshop

library(caret)
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(plotly)
library(highcharter)
Complete<-read.csv("C:/Users/Kiko S?nchez/Desktop/Ubiqum/Course 2/Task 2/datasets/CompleteResponses.csv")

#### 1. Data, Aesthetics & Geometries ####

#histogram of the salary
ggplot(Complete,
       aes(x=salary))+
  geom_histogram(bins = 10)

#barplot of the brand
ggplot(Complete,
       aes(x=brand,fill=brand))+
  geom_bar()


#combination with brand and salary
ggplot(Complete,
       aes(x=salary,fill=brand))+
      geom_histogram(color="black", bins = 20)

#### 2. Facets ####

#many salary histograms as levels of education you have
ggplot(Complete,
       aes(x=salary,fill=brand))+
  geom_histogram(color="black", bins = 20)+
  facet_wrap(Complete$elevel)


#to show x values in all the plots (scales="free_x")
ggplot(Complete,
       aes(x=salary,fill=brand))+
  geom_histogram(color="black", bins = 20)+
  facet_wrap(Complete$elevel, scales = "free_x")


#### 3. Statistics ####

#display the relationship between age, salary & brand
ggplot(Complete,
       aes(x=age, y=salary, col=brand)) + 
  geom_point() +
  geom_smooth()
## `geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = "cs")'


#Display a boxplot of salary with brand
ggplot(Complete,
       aes(x=brand, y=salary, fill=brand)) + 
  geom_boxplot()+
  stat_summary(fun.y=median, colour="black", geom="text", 
               vjust=-0.7, aes(label=round(..y.., digits=1)))


#### 4. Coordinates ####

#Display a pie chart of the brand (you will need "coord_polar()")
#we have to leave 'x' as an empty value to sum the 2 bars into an only one filled bar
pie<-ggplot(Complete,
            aes(x="", fill=brand)) + 
  geom_bar()

pie
#then, applying coord_polar, we transform the bar into a circle
#theta=y apply a circular count to well distribute the values of the filled bar
pie + coord_polar(theta = "y")

#### 5. Themes ####

# Display the histogram of salary and brand. 
#- Add a tittle
#- Change the x scale (every 15.000) and rotate the x labels 
#- Change the y scale to percentages
ggplot(Complete,
       aes(x=salary,fill=brand))+
  geom_histogram(color="black", bins = 10)+
  labs(title="Relationship between brand and salary")+
  scale_x_continuous(breaks=seq(20000, 150000, 15000))+
  theme(axis.text.x = element_text(angle=60, hjust=1))+
  scale_y_continuous(labels = scales::percent)

?scale_x_continuous

#change the background (with ggthemes)
p<-ggplot(Complete,
          aes(x=salary,fill=brand))+
  geom_histogram(color="black", bins = 10)+
  labs(title="Relationship between brand and salary")+
  scale_x_continuous(breaks=seq(20000, 150000, 15000))+
  theme(axis.text.x = element_text(angle=60, hjust=1))+
  scale_y_continuous(labels = scales::percent)

p

p + theme(
  panel.background = element_rect(fill="#BFD5E3",colour = "#6D9EC1",
                                  size = 2,linetype = "solid")
)

#or, directly applying the themes contained in ggthemes (like theme_economist)
ggplot(Complete,
       aes(x=salary,fill=brand))+
  geom_histogram(color="black", bins = 10)+
  labs(title="Relationship between brand and salary")+
  scale_x_continuous(breaks=seq(20000, 150000, 15000))+
  theme(axis.text.x = element_text(angle=60, hjust=1))+
  scale_y_continuous(labels = scales::percent)+
  theme_economist()

#### Plotly ####
P<-plot_ly(data = Complete, x = ~age, y = ~salary, color=~brand)
P
## No trace type specified:
##   Based on info supplied, a 'scatter' trace seems appropriate.
##   Read more about this trace type -> https://plot.ly/r/reference/#scatter
## No scatter mode specifed:
##   Setting the mode to markers
##   Read more about this attribute -> https://plot.ly/r/reference/#scatter-mode
## Warning: package 'bindrcpp' was built under R version 3.4.4
## Warning in RColorBrewer::brewer.pal(N, "Set2"): minimal value for n is 3, returning requested palette with 3 different levels

## Warning in RColorBrewer::brewer.pal(N, "Set2"): minimal value for n is 3, returning requested palette with 3 different levels

#### Highcharter ####
#brand pie chart
newdf<-Complete%>%
  select(brand) %>%
  group_by(brand) %>%
  summarise(n=n())

highchart() %>% 
  hc_chart(type = "pie") %>% 
  hc_add_series_labels_values(labels = newdf$brand, values = newdf$n)
